!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r){var o,i,u=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),i=function(){u._handleCard(u._link,u._name)},(o="_handlePopup")in this?Object.defineProperty(this,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):this[o]=i,this._name=e.name,this._link=e.link,this._template=n.querySelector(".element").cloneNode(!0),this._handleCard=r}var n,r;return n=t,(r=[{key:"createCard",value:function(){var e=this._template.querySelector(".element__title"),t=this._template.querySelector(".element__image");return e.textContent=this._name,t.src=this._link,t.alt=this._name,this._setEventListeners(),this._template}},{key:"_setEventListeners",value:function(){var e=this._template.querySelector(".element__like-button"),t=this._template.querySelector(".element__image"),n=this._template.querySelector(".element__delete_btn");e.addEventListener("click",this._likeHandler),t.addEventListener("click",this._handlePopup),this._removeHandler(n)}},{key:"_likeHandler",value:function(e){e.target.classList.toggle("element__like-button_is-active")}},{key:"_removeHandler",value:function(e){var t=this;e.addEventListener("click",(function(){return t._template.remove()}))}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._settings=t,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),this._buttonElement=this._formElement.querySelector(this._settings.submitButtonSelector)}var t,r;return t=e,(r=[{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(this._inputList,this._buttonElement),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState(e._inputList,e._buttonElement)}))}))}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?(t.classList.add(this._settings.inactiveButtonClass),t.disabled=!0):(t.classList.remove(this._settings.inactiveButtonClass),t.disabled=!1)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._settings.inputErrorClass),n.textContent=t,n.classList.add(this._settings.errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._settings.inputErrorClass),t.classList.remove(this._settings.errorClass),t.textContent=""}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(this._inputList,this._buttonElement),this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var u=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),i(this,"_handleClickClose",(function(e){e.target.classList.contains("popup_is-opened")&&n.close()})),i(this,"_handleEscClose",(function(e){"Escape"===e.key&&n.close()})),i(this,"_handleButtonClose",(function(){n.close()})),this._popupSelector=document.querySelector(t),this._closeButton=this._popupSelector.querySelector(".popup__close")}var t,n;return t=e,(n=[{key:"setEventListeners",value:function(){document.addEventListener("click",this._handleClickClose),document.addEventListener("keydown",this._handleEscClose),this._closeButton.addEventListener("click",this._handleButtonClose)}},{key:"open",value:function(){this._popupSelector.classList.add("popup_is-opened"),this.setEventListeners()}},{key:"close",value:function(){this._popupSelector.classList.remove("popup_is-opened"),document.removeEventListener("click",this._handleClickClose),document.removeEventListener("keydown",this._handleEscClose),this._closeButton.removeEventListener("click",this._handleButtonClose)}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function l(e,t){return l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},l(e,t)}function s(e,t){if(t&&("object"===a(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return c(e)}function c(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function p(){return p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=f(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},p.apply(this,arguments)}function f(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}function d(e){return d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},d(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&l(e,t)}(i,e);var t,n,r,o=(n=i,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(n);if(r){var o=d(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return s(this,e)});function i(e){var t,n,r,u,a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),a=function(e,r){n._popupImage.src=e,n._popupImage.alt=r,n._popupTitle.textContent=r,p((t=c(n),d(i.prototype)),"open",t).call(t)},(u="open")in(r=c(n=o.call(this,e)))?Object.defineProperty(r,u,{value:a,enumerable:!0,configurable:!0,writable:!0}):r.open=a,n._popupImage=n._popupSelector.querySelector(".popup__image"),n._popupTitle=n._popupSelector.querySelector(".popup__image-info"),n}return t=i,Object.defineProperty(t,"prototype",{writable:!1}),t}(u);function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(){return m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=v(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},m.apply(this,arguments)}function v(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}function b(e,t){return b=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},b(e,t)}function g(e,t){if(t&&("object"===y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return w(e)}function w(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function E(e){return E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},E(e)}var S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&b(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return g(this,e)});function u(e,t){var n,r,o,a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),a=function(e){e.preventDefault(),n._submissionHandler(n._getInputValues())},(o="_submissionHandlerFunc")in(r=w(n=i.call(this,t)))?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a,n._submissionHandler=e,n._inputList=n._popupSelector.querySelectorAll(".popup__input"),n._form=n._popupSelector.querySelector(".popup__form-window"),n}return t=u,(n=[{key:"close",value:function(){m(E(u.prototype),"close",this).call(this),this._form.reset()}},{key:"setEventListeners",value:function(){m(E(u.prototype),"setEventListeners",this).call(this),this._popupSelector.addEventListener("submit",this._submissionHandlerFunc)}},{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.name]=t.value})),e}}])&&h(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(u);function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var L=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userNameSelector=t,this._userProfessionSelector=n}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._userNameSelector.textContent,Profession:this._userProfessionSelector.textContent}}},{key:"setUserInfo",value:function(e,t){this._userNameSelector.textContent=e,this._userProfessionSelector.textContent=t}}])&&k(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var j=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._containerElement=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderer",value:function(){var e=this;this._renderedItems.forEach((function(t){return e._renderer(t)}))}},{key:"addItem",value:function(e){this._containerElement.prepend(e)}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),C=document.querySelector(".profile__edit-button"),P=document.querySelector(".profile__add-button"),q=document.querySelector(".profile__name"),I=document.querySelector(".profile__profession"),B="#popup_type_edit-profile",x=document.querySelector("#card-template").content,R=document.querySelector(B).querySelector(".popup__input_type_name"),T=document.querySelector(B).querySelector(".popup__input_type_profession"),V=document.querySelector("#edit_form"),A=document.querySelector("#add_form"),H={},D=new L(q,I),N=new S((function(e){D.setUserInfo(e.name,e.info),q.textContent=R.value,I.textContent=T.value,N.close(),H[V.getAttribute("name")].resetValidation()}),B),U=new S((function(e){var n=new t(e,x,M);z.addItem(n.createCard()),U.close(),H[A.getAttribute("name")].resetValidation()}),"#popup_type_add-card"),F=new _(".popup_image-container"),M=F.open;U.setEventListeners(),F.setEventListeners(),C.addEventListener("click",(function(){N.open();var e=D.getUserInfo();R.value=e.name,T.value=e.Profession})),P.addEventListener("click",(function(){U.open()}));var Y,z=new j({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg",alt:"Forest with river in the middle"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg",alt:"Lake between mountains"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg",alt:"sunset"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg",alt:"night with mountain view"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg",alt:"lake with mountains"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg",alt:"small port with boats"}],renderer:function(e){var n=new t(e,x,M);z.addItem(n.createCard())}},".elements__pattern");z.renderer(),Y={formSelector:".popup__form-window",inputSelector:".popup__input",submitButtonSelector:".popup__submit",inactiveButtonClass:"popup__submit_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},Array.from(document.querySelectorAll(Y.formSelector)).forEach((function(e){var t=new r(Y,e),n=e.getAttribute("name");H[n]=t,t.enableValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,