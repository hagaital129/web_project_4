!function(){"use strict";var e={375:function(e,t,n){e.exports=n.p+"ae1a976ddb506239e9f0.svg"},937:function(e,t,n){e.exports=n.p+"6cfc44eec3c3eff2b9a7.svg"},625:function(e,t,n){e.exports=n.p+"150b1578933e905c5e2e.gif"}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}n.p="",function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){var n=e.data,r=e.user,o=e.photoTemplate,i=e.handleCardClick,a=e.handleDeleteCard,c=e.likeClickHandler;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=n.name,this._link=n.link,this._handleCardClick=i,this._handleDeleteCard=a,this._id=n._id,this._userId=r,this._ownerId=n.owner._id,this._cardId=n._id,this._likes=n.likes,this._likeClickHandler=c,this._element=o.cloneNode(!0),this._likeBtn=this._element.querySelector(".photo-grid__card-button"),this._likeBtnCounter=this._element.querySelector(".photo-grid__card-button-counter")}var n,r;return n=t,(r=[{key:"createCard",value:function(){return this._cardImage=this._element.querySelector(".photo-grid__image"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._element.querySelector(".photo-grid__text").textContent=this._name,this._setEventListeners(),this._userId!==this._ownerId&&(this._element.querySelector(".photo-grid__delete-btn").style.display="none"),this._likeBtnCounter.textContent=this._likes.length,this._element}},{key:"getCardId",value:function(){return this._cardId}},{key:"_handelLike",value:function(){this._likeBtn.classList.toggle("photo-grid__card-button_active")}},{key:"_likeStatus",value:function(){var e=this;Array.from(this.likes).forEach((function(t){t._id===e._userId&&e._likeBtn.classList.add("photo-grid__card-button_active")}))}},{key:"checkIfLiked",value:function(e){return this._likes.find((function(t){return t._id===e}))?this._liked=!0:this._liked=!1,this._liked}},{key:"refreshCard",value:function(e){this._likes=e.likes,this._handelLike(),this._likeBtnCounter.textContent=this._likes.length}},{key:"_setEventListeners",value:function(){var e=this;this._likeBtn.addEventListener("click",(function(){e._likeClickHandler(e)})),this._cardImage.addEventListener("click",(function(t){e._handleCardClick(t)})),this._element.querySelector(".photo-grid__delete-btn").addEventListener("click",(function(){e._handleDeleteCard(e._id)}))}},{key:"removeCard",value:function(){this._element.remove(),this._element=null}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._settings=t,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),this._buttonElement=this._formElement.querySelector(this._settings.submitButtonSelector)}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._settings.inputErrorClass),n.textContent=e.validationMessage,n.classList.add(this._settings.errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._settings.inputErrorClass),t.textContent="",t.classList.remove(this._settings.errorClass)}},{key:"_toggleButtonState",value:function(){this._inputList.some((function(e){return!e.validity.valid}))?(this._buttonElement.classList.add(this._settings.inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._settings.inactiveButtonClass),this._buttonElement.disabled=!1)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_setEventListener",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState(e._inputList,e._buttonElement)}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListener()}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.close()},(n="_handleEscClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(t)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_visible"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_visible"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){(t.target.classList.contains("popup")||t.target.classList.contains("popup__close-btn"))&&e.close()}))}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(){return l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=s(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},l.apply(this,arguments)}function s(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}function f(e,t){return f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},f(e,t)}function p(e,t){if(t&&("object"===c(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function d(e){return d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},d(e)}var h=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&f(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return p(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._popupImage=t._popup.querySelector(".popup__image"),t._popupPhotoCaption=t._popup.querySelector(".popup__image-caption"),t}return t=a,(n=[{key:"open",value:function(e,t){this._popupImage.src=e,this._popupImage.alt=e,this._popupPhotoCaption.textContent=t,l(d(a.prototype),"open",this).call(this)}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(a);function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=b(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},v.apply(this,arguments)}function b(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}function m(e,t){return m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},m(e,t)}function g(e,t){if(t&&("object"===y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function k(e){return k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},k(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&m(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=k(r);if(o){var n=k(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return g(this,e)});function a(e,t,n,r){var o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(o=i.call(this,e))._handleSubmit=t,o._form=o._popup.querySelector(".popup__form"),o._inputs=o._popup.querySelectorAll(".popup__input"),o._submitBtn=o._popup.querySelector(".popup__save-button"),o._buttonText=n,o._loadingButtonText=r,o}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputs.forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmit(e._getInputValues())})),v(k(a.prototype),"setEventListeners",this).call(this)}},{key:"showLoading",value:function(){this._submitBtn.textContent=this._loadingButtonText}},{key:"hideLoading",value:function(){this._submitBtn.textContent=this._buttonText}}])&&_(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(a);function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function C(){return C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=O(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},C.apply(this,arguments)}function O(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}function L(e,t){return L=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},L(e,t)}function j(e,t){if(t&&("object"===E(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function I(e){return I=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},I(e)}var P=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&L(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=I(r);if(o){var n=I(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return j(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._form=t._popup.querySelector(".popup__form"),t}return t=a,(n=[{key:"setAction",value:function(e){this._handleSubmit=e}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmit()})),C(I(a.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){this._form.reset(),C(I(a.prototype),"close",this).call(this)}}])&&S(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(a);function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var x=function(){function e(t){var n=t.profileNameSelector,r=t.profileJobSelector,o=t.profileImgSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileName=document.querySelector(n),this._profileJob=document.querySelector(r),this._profileImg=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._profileName.textContent,job:this._profileJob.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about,r=e.avatar;this._profileName.textContent=t,this._profileJob.textContent=n,this._profileImg.style.backgroundImage='url("'.concat(r,'")')}}])&&q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var B=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=t,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"render",value:function(e){e.forEach(this._renderer)}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var U=function(e,t){return fetch(e,t).then((function(e){return e.ok?e.json():Promise.reject(e.statusText)}))},A=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){return U("".concat(this._baseUrl,"/cards"),{headers:this._headers})}},{key:"getUserInfo",value:function(){return U("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}},{key:"getUserImg",value:function(){return U("".concat(this._baseUrl,"/users/me/avatar"),{headers:this._headers})}},{key:"createCard",value:function(e,t){var n={name:e,link:t};return U("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify(n)})}},{key:"deleteCard",value:function(e){return U("".concat(this._baseUrl,"/cards/").concat(e," "),{headers:this._headers,method:"DELETE"})}},{key:"likeCard",value:function(e){return U("".concat(this._baseUrl,"/cards/likes/").concat(e," "),{headers:this._headers,method:"PUT"})}},{key:"dislikeCard",value:function(e){return U("".concat(this._baseUrl,"/cards/likes/").concat(e," "),{headers:this._headers,method:"DELETE"})}},{key:"editProfileInfo",value:function(e,t){var n={name:e,about:t};return U("".concat(this._baseUrl,"/users/me "),{headers:this._headers,method:"PATCH",body:JSON.stringify(n)})}},{key:"editProfileImg",value:function(e){return U("".concat(this._baseUrl,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify(e)})}}])&&R(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),D=n(625),V=n(937),N=n(375),J=document.querySelector(".profile__image"),H=document.querySelector(".header__logo"),M=document.querySelector("#photo-grid__cards").content.querySelector(".photo-grid__card"),z=document.querySelector(".profile__img-button"),Y=document.querySelector(".popup__form_edit"),$=document.querySelector("#name-input"),F=document.querySelector("#occupation-input"),G=document.querySelector(".profile__edit-button"),K=(document.querySelector("#profileImg-input"),document.querySelector("#profile-img_form")),Q=document.querySelector("#add_form"),W=document.querySelector(".profile__add-button"),X=document.querySelector("#edit-save-btn"),Z=document.querySelector("#add-save-btn"),ee=document.querySelector("#profile-img-save-btn"),te=document.querySelector("#delete-confirm-btn");function ne(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var re,oe=new A({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"86dc75a4-9134-49a7-b63a-4b72140fc6f9","Content-Type":"application/json"}});Promise.all([oe.getInitialCards(),oe.getUserInfo()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,c=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){c=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(c)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return ne(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ne(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];re=i._id,ue.render(o),se.setUserInfo(i)})).catch((function(e){console.log("Error: ".concat(e))})),J.src=D,z.src=N,H.src=V;var ie=new h(".popup_photo");ie.setEventListeners();var ae=new P(".popup_confirmation");function ce(e){var n=new t({data:e,user:re,photoTemplate:M,handleCardClick:function(e){e.preventDefault();var t=e.target,n=t.src,r=t.alt;ie.open(n,r),ie.setEventListeners()},handleDeleteCard:function(e){ae.open(),ae.setAction((function(){te.textContent="Deleting...",oe.deleteCard(e).then((function(){n.removeCard(),ae.close()})).catch((function(e){console.log("Error: ".concat(e))})).finally((function(){te.textContent="Yes"}))}))},likeClickHandler:function(e){e.checkIfLiked(re)?oe.dislikeCard(e.getCardId()).then((function(t){e.refreshCard(t,re)})).catch((function(e){console.log("Error: ".concat(e))})):oe.likeCard(e.getCardId()).then((function(t){e.refreshCard(t,re)})).catch((function(e){console.log("Error: ".concat(e))}))}});return n.createCard()}ae.setEventListeners();var ue=new B((function(e){ue.addItem(ce(e))}),".photo-grid__grid"),le=new w(".popup_add",(function(e){le.showLoading(),oe.createCard(e.title,e.imglink).then((function(e){var t=ce(e);ue.addItem(t),le.close()})).catch((function(e){console.log(e)})).finally((function(){le.hideLoading()}))}),Z.textContent,"Creating...");le.setEventListeners();var se=new x({profileNameSelector:".profile__name",profileJobSelector:".profile__occupation",profileImgSelector:".profile__image"}),fe=new w(".popup_edit",(function(e){fe.showLoading(),oe.editProfileInfo(e.name,e.occupation).then((function(e){se.setUserInfo(e),fe.close()})).catch((function(e){console.log("Error: ".concat(e))})).finally((function(){fe.hideLoading()}))}),X.textContent,"Saving...");fe.setEventListeners();var pe,de={};pe={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},Array.from(document.querySelectorAll(pe.formSelector)).forEach((function(e){var t=new o(pe,e),n=e.getAttribute("name");de[n]=t,t.enableValidation()})),G.addEventListener("click",(function(){var e=se.getUserInfo();fe.open(),$.value=e.name,F.value=e.job,de[Y.getAttribute("name")].resetValidation()})),W.addEventListener("click",(function(){le.open(),de[Q.getAttribute("name")].resetValidation()})),z.addEventListener("click",(function(){he.open(),de[K.getAttribute("name")].resetValidation()}));var he=new w(".popup_profile-img",(function(e){he.showLoading(),oe.editProfileImg(e).then((function(e){se.setUserInfo(e),he.close()})).catch((function(e){console.log("Error: ".concat(e))})).finally((function(){he.hideLoading()}))}),ee.textContent,"Saving...");he.setEventListeners()}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,